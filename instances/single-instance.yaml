Parameters:
  FunctionInstanceType:
    Type: String
    AllowedValues:
      - t3a.small
      - t3a.medium
      - t3a.large
    Description: Please select an instance type within the allowed list
    Default: t3a.small

  FunctionSubnetId:
    Description: Select a Subnet from the List
    Type: AWS::EC2::Subnet::Id

  FunctionImageId:
    Description: Enter the ID of the Amazon Machine Image (AMI) you want to use
    Type: AWS::EC2::Image::Id
    Default: ami-00ffa321011c2611f # Amazon provided instance ID
    AllowedValues:
      - ami-00ffa321011c2611f # Amazon Linux
      - ami-0d5c8edc10c17ec35 # Redhat Linux

  DiskType: 
    Type: String
    AllowedValues:
      - gp3
      - gp2
      - io1
      - sc1
      - st1
      - standard
    Default: gp3

  DiskSize:
    Type: String
    Default: 30

  VpcId:
    Type: String

  OwnerTag:
    Type: String
    Description: Specify the owner of the EC2 instance

  FunctionTag:
    Type: String
    Description: What is the function of this instance?

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      FunctionImageId:
        default: "Select the OS for the AMI"

Resources:
  SingleInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VpcId
      GroupDescription: Single Instance Security Group

  SingleInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AnsibleRole
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM 

  SingleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SingleInstanceRole

  SingleHost:
    Type: AWS::EC2::Instance
    Properties:
      SecurityGroupIds:
        - !Ref SingleInstanceSG
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeType: !Ref DiskType
            DeleteOnTermination: true
            VolumeSize: !Ref DiskSize
      InstanceType: !Ref FunctionInstanceType
      SubnetId: 
        !Ref FunctionSubnetId
      ImageId: !Ref FunctionImageId
      IamInstanceProfile: !Ref SingleProfile
      Tags:
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Function
          Value: !Ref FunctionTag
        - Key: Name
          Value: !Sub ${AWS::StackName}
