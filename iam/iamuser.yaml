AWSTemplateFormatVersion: "2010-09-09"
Description: "Create IAM User, IAM Group, attach a policy, and store credentials in AWS Secrets Manager."

Parameters:
  UserName:
    Type: String
    Description: "IAM username to create"
  GroupName:
    Type: String
    Description: "IAM group name to create"
  SecretName:
    Type: String
    Description: "Name of the secret to store IAM user credentials"

Resources:
  IAMUser:
    Type: "AWS::IAM::User"
    Properties:
      UserName: !Ref UserName

  IAMGroup:
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: !Ref GroupName

  IAMPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "example-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "elasticloadbalancing:DescribeLoadBalancers"
              - "ec2:DescribeInstances"
              - "ec2:DescribeInstanceTypes"
              - "ec2:DescribeInstanceTypeOfferings"
              - "ec2:DescribeRegions"
              - "ec2:DescribeInstanceStatus"
              - "ec2:DescribeImages"
            Resource: "*"
      Groups:
        - !Ref IAMGroup

  IAMGroupMembership:
    Type: "AWS::IAM::UserToGroupAddition"
    Properties:
      GroupName: !Ref GroupName
      Users:
        - !Ref UserName

  IAMAccessKey:
    Type: "AWS::IAM::AccessKey"
    Properties:
      UserName: !Ref UserName

  SecretManagerIAMUserCredentials:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: !Ref SecretName
      Description: "Stores IAM user's access key and secret key"
      SecretString: 
        Fn::Sub: |
          {
            "AccessKeyId": "${IAMAccessKey}",
            "SecretAccessKey": "${IAMAccessKey.SecretAccessKey}"
          }

Outputs:
  IAMUserName:
    Description: "The created IAM User"
    Value: !Ref IAMUser

  SecretARN:
    Description: "ARN of the created Secret in AWS Secrets Manager"
    Value: !Ref SecretManagerIAMUserCredentials
